---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getEntry } from 'astro:content';

const { data } = await getEntry('projects', 'idl');
const caseStudy = data.caseStudy ?? {};
const processSections = caseStudy.process?.sections ?? [];
const heroTitle = caseStudy.hero?.title ?? data.title;
const heroSubtitle = caseStudy.hero?.subtitle ?? data.summary;
const chartDataJson = JSON.stringify(caseStudy.solution?.chart ?? null);
const donutDataJson = JSON.stringify(caseStudy.impact?.donut ?? null);
const navLinks = [
  { href: '/', label: 'Home' },
  { href: '#challenge', label: 'Challenge' },
  { href: '#solution', label: 'Solution' },
  { href: '#impact', label: 'Impact' },
  { href: '#deep-dive', label: 'Process' }
];
---
<BaseLayout
  title={`${heroTitle} | Jacob Meyerkopf`}
  description={heroSubtitle}
  mainClass="bg-gray-100"
  navLinks={navLinks}
>
  <Fragment slot="head">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  </Fragment>
  <main class="container mx-auto max-w-5xl p-4 md:p-8">
    <header class="mb-12 text-center">
      <h1 class="text-4xl font-extrabold text-[#073B4C] md:text-5xl">{heroTitle}</h1>
      <p class="mt-2 text-lg text-[#118AB2]">{heroSubtitle}</p>
    </header>

    <section id="challenge" class="mb-16">
      <div class="rounded-lg bg-white p-6 shadow-lg md:p-8">
        <h2 class="mb-4 text-center text-3xl font-bold text-[#073B4C]">{caseStudy.challenge?.title}</h2>
        <p class="mx-auto mb-8 max-w-3xl text-center text-gray-600">{caseStudy.challenge?.description}</p>
        <div class="grid grid-cols-1 gap-6 text-center md:grid-cols-2">
          {caseStudy.challenge?.metrics?.map((metric) => (
            <div class={`rounded-lg p-6 text-xl font-medium ${metric.accent ?? 'bg-gray-100 text-gray-800'}`}>
              <div class="text-5xl font-extrabold">{metric.value}</div>
              <div>{metric.label}</div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <section id="solution" class="mb-16">
      <div class="rounded-lg bg-white p-6 shadow-lg md:p-8">
        <h2 class="mb-4 text-center text-3xl font-bold text-[#073B4C]">{caseStudy.solution?.title}</h2>
        <p class="mx-auto mb-8 max-w-3xl text-center text-gray-600">{caseStudy.solution?.description}</p>
        <div class="chart-container mx-auto">
          <canvas id="timeComparisonChart"></canvas>
        </div>
      </div>
    </section>

    <section id="impact" class="mb-16">
      <div class="rounded-lg bg-white p-6 shadow-lg md:p-8">
        <h2 class="mb-4 text-center text-3xl font-bold text-[#073B4C]">{caseStudy.impact?.title}</h2>
        <div class="mb-12 grid grid-cols-1 gap-6 text-center md:grid-cols-3">
          {caseStudy.impact?.metrics?.map((metric) => (
            <div class={`rounded-lg p-6 text-xl font-medium shadow-md ${metric.accent ?? 'bg-gray-100 text-gray-800'}`}>
              <div class="text-5xl font-extrabold">{metric.value}</div>
              <div>{metric.label}</div>
            </div>
          ))}
        </div>
        <div class="grid grid-cols-1">
          <div class="h-64 md:h-80">
            <canvas id="timeSavedDonut"></canvas>
          </div>
        </div>
      </div>
    </section>

    <section id="deep-dive" class="mb-16 rounded-lg bg-[#F0F4F8] p-6 shadow-inner md:p-10">
      <h2 class="mb-8 text-center text-3xl font-extrabold text-[#073B4C] md:text-4xl">Behind the Numbers: The UX Process</h2>

      {processSections.map((section, index) => (
        <div class={`mb-12 ${index === processSections.length - 1 ? '' : 'pb-2'}`}>
          <h3 class="mb-4 text-2xl font-bold text-[#118AB2]">{section.title}</h3>
          <p class="mb-6 text-gray-700">{section.description}</p>
          {section.findings && (
            <div class="space-y-4">
              {section.findings.map((finding) => (
                <div class="rounded-lg bg-white p-4 shadow">
                  <p>
                    <strong class="text-[#073B4C]">{finding.title}:</strong> {finding.description}
                  </p>
                </div>
              ))}
            </div>
          )}
          {section.steps && (
            <div class="mt-8 grid gap-y-8 md:grid-cols-4 md:gap-x-4">
              {section.steps.map((step) => (
                <div class="step text-center">
                  <div class="step-icon mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-full bg-red-200 text-2xl">
                    {step.icon}
                  </div>
                  <h4 class="font-bold text-[#073B4C]">{step.title}</h4>
                  <p class="text-sm text-gray-600">{step.description}</p>
                </div>
              ))}
            </div>
          )}
          {section.comparison && (
            <div class="mt-8 overflow-hidden rounded-lg bg-white shadow-lg">
              <table class="w-full text-left">
                <thead class="bg-gray-200">
                  <tr>
                    <th class="p-4 text-lg font-bold text-[#FF6B6B]">Before: The Manual Method</th>
                    <th class="p-4 text-lg font-bold text-[#06D6A0]">After: The Automated System</th>
                  </tr>
                </thead>
                <tbody class="divide-y">
                  {section.comparison.map((row) => (
                    <tr class={row.highlight ? 'bg-gray-50 font-bold' : 'hover:bg-gray-50'}>
                      <td class="p-4 text-gray-700">{row.before}</td>
                      <td class="p-4 text-gray-700">{row.after}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          )}
        </div>
      ))}
    </section>

    <section id="contribution" class="mb-16">
      <div class="rounded-lg bg-white p-6 shadow-lg md:p-8">
        <h2 class="mb-6 text-center text-3xl font-bold text-[#073B4C]">{caseStudy.contribution?.title}</h2>
        <p class="mx-auto mb-8 max-w-3xl text-center text-gray-600">{caseStudy.contribution?.description}</p>
        <div class="grid grid-cols-1 gap-6 text-center md:grid-cols-3">
          {caseStudy.contribution?.cards?.map((card) => (
            <div class="rounded-lg border-2 border-gray-200 p-6">
              <div class="mb-3 text-4xl">{card.icon}</div>
              <h3 class="mb-2 text-xl font-bold text-[#073B4C]">{card.title}</h3>
              <p class="text-gray-600">{card.description}</p>
            </div>
          ))}
        </div>
      </div>
    </section>

    <footer class="pb-4 text-center text-sm text-gray-500">
      Case study created to demonstrate the full lifecycle of a UX-driven process optimization project.
    </footer>
  </main>

  <script id="idl-chart-data" type="application/json">{chartDataJson}</script>
  <script id="idl-donut-data" type="application/json">{donutDataJson}</script>

  <script type="module">
    const chartDataEl = document.getElementById('idl-chart-data');
    const chartData = chartDataEl ? JSON.parse(chartDataEl.textContent || 'null') : null;
    const donutDataEl = document.getElementById('idl-donut-data');
    const donutData = donutDataEl ? JSON.parse(donutDataEl.textContent || 'null') : null;

    const palette = {
      red: '#FF6B6B',
      yellow: '#FFD166',
      green: '#06D6A0',
      blue: '#118AB2',
      darkBlue: '#073B4C'
    };

    const tooltipCallbacks = {
      plugins: {
        tooltip: {
          callbacks: {
            title(tooltipItems) {
              const item = tooltipItems[0];
              const label = item.chart.data.labels[item.dataIndex];
              return Array.isArray(label) ? label.join(' ') : label;
            }
          }
        }
      }
    };

    document.addEventListener('DOMContentLoaded', () => {
      if (chartData) {
        const ctx = document.getElementById('timeComparisonChart');
        if (ctx) {
          const comparison = new Chart(ctx.getContext('2d'), {
            type: 'bar',
            data: {
              labels: chartData.labels,
              datasets: [
                {
                  label: chartData.label,
                  data: chartData.values,
                  backgroundColor: [palette.red, palette.yellow, palette.green],
                  borderColor: [palette.red, palette.yellow, palette.green],
                  borderWidth: 1
                }
              ]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              ...tooltipCallbacks,
              scales: {
                y: {
                  beginAtZero: true,
                  title: {
                    display: true,
                    text: 'Minutes',
                    color: palette.darkBlue,
                    font: { weight: 'bold' }
                  }
                }
              },
              plugins: {
                ...tooltipCallbacks.plugins,
                legend: { display: false },
                title: {
                  display: true,
                  text: 'Process Time Comparison',
                  font: { size: 18, weight: 'bold' },
                  color: palette.darkBlue
                }
              }
            }
          });
        }
      }

      if (donutData) {
        const donut = document.getElementById('timeSavedDonut');
        if (donut) {
          new Chart(donut.getContext('2d'), {
            type: 'doughnut',
            data: {
              labels: donutData.labels,
              datasets: [
                {
                  data: donutData.values,
                  backgroundColor: [palette.green, palette.red],
                  borderColor: '#ffffff',
                  borderWidth: 4
                }
              ]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              ...tooltipCallbacks,
              plugins: {
                ...tooltipCallbacks.plugins,
                legend: { position: 'bottom' },
                title: {
                  display: true,
                  text: 'Time Saved vs. Time Spent (per store)',
                  font: { size: 16, weight: 'bold' },
                  color: palette.darkBlue
                }
              }
            }
          });
        }
      }
    });
  </script>
</BaseLayout>
