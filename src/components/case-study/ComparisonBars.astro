---
const { data } = Astro.props;
const max = Math.max(...(data?.values ?? [0]));
const scale = max === 0 ? 0 : 100 / max;
---
{data && data.values && data.labels && (
  <div class="mt-10 space-y-4">
    {data.values.map((value, index) => {
      const label = data.labels[index];
      const width = `${Math.max(6, value * scale)}%`;
      return (
        <div class="rounded-2xl border border-slate-200/70 bg-slate-100/80 p-5 shadow-sm transition-colors duration-300 dark:border-slate-700 dark:bg-slate-900/60">
          <div class="flex items-center justify-between text-sm font-semibold uppercase tracking-wide text-slate-500 dark:text-slate-300">
            <span>{Array.isArray(label) ? label.join(' ') : label}</span>
            <span class="text-slate-900 dark:text-white">{value} {data.suffix ?? ''}</span>
          </div>
          <div class="mt-3 h-3 rounded-full bg-slate-100 dark:bg-slate-800">
            <div class="h-full rounded-full bg-sky-500" style={`width: ${width}`}></div>
          </div>
        </div>
      );
    })}
  </div>
)}
